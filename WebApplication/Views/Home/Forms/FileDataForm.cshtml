@model FileData
@if(Model != null)
{
	<form action="@ViewData["Action"]" method="post">
		@Html.AntiForgeryToken()
		<fieldset>
			<legend>Change file-data</legend>
			<div>
				@{ var metadata = ViewData.ModelMetadata.Properties.First(property => property.PropertyName.Equals("Path", StringComparison.OrdinalIgnoreCase)); }
				<label for="file-path-input">@metadata.GetDisplayName()</label>
				<input id="file-path-input" name="@metadata.PropertyName" type="text" />
			</div>
			<div>
				@{ metadata = ViewData.ModelMetadata.Properties.First(property => property.PropertyName.Equals("LineToAdd", StringComparison.OrdinalIgnoreCase)); }
				<label for="file-line-to-add-input">@metadata.GetDisplayName()</label>
				<input id="file-line-to-add-input" name="@metadata.PropertyName" type="text" />
			</div>
			<div>
				@{ metadata = ViewData.ModelMetadata.Properties.First(property => property.PropertyName.Equals("ImpersonateWithClaimsToWindowsTokenService", StringComparison.OrdinalIgnoreCase)); }
				<input@(Html.Raw(Model.ImpersonateWithClaimsToWindowsTokenService ? " checked=\"checked\"" : string.Empty)) id="file-use-service-input" name="@metadata.PropertyName" type="checkbox" value="true" />
				<label for="file-use-service-input">@metadata.GetDisplayName()</label>
			</div>
			<button type="submit">Save</button>
		</fieldset>
	</form>
}